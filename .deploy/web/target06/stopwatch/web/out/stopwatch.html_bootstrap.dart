import "dart:isolate" as sC;import "dart:html" as AB;import "dart:async" as qB;import "dart:collection" as hB;class eC{static const  fC="Chrome";final  aC;final  minimumVersion;const eC(this.aC,[this.minimumVersion]);}class gC{const gC();}class hC{final  name;const hC(this.name);}class iC{const iC();}class jC{const jC();}final TB=new l();var UB='00:00'; get iB{if(CC){DC(TB,t.WB,'counter');}return UB;}set iB( g){if(BC(TB)){EC(TB,t.WB,'counter',UB,g);}UB=g;}var MB=new Stopwatch();var NB;var VB;var FB; rB(){VB=AB.query("#startbutton");NB=AB.query("#stopbutton");NB.disabled=true;FB=AB.query("#resetbutton");FB.disabled=true;} sB(){MB.start();var g=new Duration(seconds:1);new qB.Timer.periodic(g,vB);VB.disabled=true;NB.disabled=false;FB.disabled=true;} tB(){MB.stop();VB.disabled=false;FB.disabled=false;NB.disabled=true;} uB(){MB.reset();iB='00:00';FB.disabled=true;} vB( wC){var g=MB.elapsedMilliseconds~/1000;var h=0;if(g>=60){h=g~/60;g=g%60;}var i=(h<=9)?'0${h}':'${h}';var j=(g<=9)?'0${g}':'${g}';iB='${i}:${j}';} wB(){var xC=AB.document.body;var yC,zC,AD,BD;var CD=new nC(xC);yC=xC.nodes[3].nodes[1];var DD=CD.cC(()=>iB,false);yC.nodes.addAll([new AB.Text('\n      '),DD,new AB.Text('\n      ')]);zC=xC.nodes[3].nodes[3].nodes[1];CD.listen(zC.onClick,(g){sB();});AD=xC.nodes[3].nodes[3].nodes[3];CD.listen(AD.onClick,(g){tB();});BD=xC.nodes[3].nodes[3].nodes[5];CD.listen(BD.onClick,(g){uB();});CD.dB();CD.insert();}main(){mB=true;rB();wB();}typedef  s( e);typedef  xB( changes);typedef  BB();typedef  yB();class OB{final oldValue;final newValue;final  changes;OB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is OB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>OC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class t{static const WB=1;static const XB=2;static const jB=XB|4;static const kB=XB|8;final  type;final key;final oldValue;final newValue;t(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is t&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>PC(type,key,oldValue,newValue); toString(){var g;switch (type){case WB:g='field';break;case XB:g='index';break;case jB:g='insert';break;case kB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} zB(g, i,[ k]){if(g is l){var h=g;return YB(h,(q){i(new OB(h,h,q));});}var j=new PB(g,i,k);if(!j.ED()){return FC;}return j.FD;} YB( g, i){if(g.EB==null)g.EB=new ZB();var h=g.EB.add(i);return h.remove;}class l{var EB;var DB;final  hashCode= ++l.AC;static var AC=0;} BC( g)=>g.EB!=null&&g.EB.head!=null; get CC=>CB!=null; DC( g, h,i)=>CB.GD(g,h,i); EC( g, j,k, h, i){if((j&(t.jB|t.kB))==0){if(h==i)return;}if(u==null){u=[] ;QC(GC);}if(g.DB==null){g.DB=[] ;u.add(g);}g.DB.add(new t(j,k,h,i));} FC(){}var CB;var lB=100;var u;var v; GC(){var q=0;while (u!=null||v!=null){var j=u;u=null;var i=v;v=null;if(q++ ==lB){HC(j,i);return;}if(j!=null){for(var h in j){var LB=h.DB;h.DB=null;for(var g=h.EB.head;g!=null;g=g.next){var k=g.value;try {k(LB);}catch (gB,w){GB(gB,w,k,'from ${h}');}}}}if(i!=null){i.forEach((rC,fB){fB.HD();});}}} HC( k, j){var g=[] ;if(k!=null){for(var i in k){var LB=i.DB;g.add('${i} ${LB}');}}if(j!=null){for(var q in j.values){var h=q.HD();if(h!=null)g.add('${q} ${h}');}}u=null;v=null;var w='exceeded notifiction limit of ${lB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';KC(w);}class PB{static var IC=0;final  ID= ++PB.IC;final  JD;final  KD;final  LD;final  MD=new Map();final  ND=[] ;var OD=false;var PD;PB(this.JD,this.KD,this.LD); toString()=>LD!=null?'<observer ${ID}: ${LD}>':'<observer ${ID}>'; ED(){var h=CB;CB=this;try {PD=JD();if(PD is Iterable&&PD is !List&&PD is !l){PD=(PD as Iterable).toList();}}catch (g,i){GB(g,i,JD,'from ${this}');PD=null;}MD.forEach(QD);MD.clear();assert(CB==this);CB=h;RD();return ND.length>0;} SD( i){try {KD(i);}catch (g,h){GB(g,h,KD,'from ${this}');}} RD(){var g=PD;if(g is !l)return;ND.add(YB(g,(h){SD(new OB(g,g,h));}));} GD( q, w,g){var i=MD.putIfAbsent(q,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|w;}catch (j,k){GB(j,k,g,'hashCode or operator == from ${this}');}} QD( i, j){ND.add(YB(i,(k){if(OD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){OD=true;if(v==null){v=new hB.SplayTreeMap();}v[ID]=this;return;}}}));} FD(){for(var g in ND){g();}OD=false;} HD(){if(!OD)return null;var g=PD;FD();ED();try {if(g==PD)return null;}catch (i,j){GB(i,j,g,'operator == from ${this}');return null;}var h=new OB(g,PD);SD(h);return h;}}typedef  JC( message);var KC=(g)=>print(g);typedef  LC(error,stackTrace,obj, message);var GB=MC; MC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class NC{}class n<o>{var TD;var UD;var VD;var WD;n.tC( g,this.VD):WD=g{if(VD!=null)VD.XD++ ;} get next=>UD; get value=>WD;set value( g)=>WD=g; YD( g, h){UD=h;TD=g;if(g!=null)g.UD=this;if(h!=null)h.TD=this;return this;} append( g)=>new n<o>.tC(g,VD).YD(this,UD); remove(){if(VD==null)return;VD.XD-- ;if(TD!=null){TD.UD=UD;}else{VD.ZD=UD;}if(UD!=null){UD.TD=TD;}else{VD.aD=TD;}UD=null;TD=null;VD=null;}}class ZB<o> extends hB.IterableBase<o>{var ZD;var aD; get length=>XD;var XD=0;ZB(){} get head=>ZD; add( h){var g=new n<o>.tC(h,this);if(aD==null)return ZD=aD=g;return aD=g.YD(aD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new kC<o>(this);}class kC<o> implements Iterator<o>{var bD;var VD;var cD;var dD=-1;kC(this.VD){bD=new List<n>(VD.length);var h=0;var g=VD.head;while (g!=null){bD[h++ ]=g;g=g.next;}} get current=>cD; moveNext(){do{dD++ ;}while(dD<bD.length&&bD[dD].VD!=VD);if(dD<bD.length){cD=bD[dD].value;return true;}else{cD=null;return false;}}}HB(h,g)=>h.hashCode*31+g.hashCode;OC(h,g,i)=>HB(HB(h,g),i);PC(g,i,h,j)=>HB(HB(g,i),HB(h,j)); QC( h()){var g=new sC.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} RC(i, g,[ h]){var j=i is NC;if(h==null){h=i.toString();}if(!j&&g is AB.Text){g.text=h;}else{var k=g;g=j?new AB.Element.html(h):new AB.Text(h);k.replaceWith(g);}return g;}abstract class QB{ dB(){} insert(); remove();}class lC extends QB{final  pB;var eD;final  listener;lC(this.pB,this.listener); insert(){eD=pB.listen(listener);} remove(){eD.cancel();eD=null;}}class mC extends QB{final exp;final  action;final  isFinal;var SB;mC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new OB(null,exp()));}else if(SB!=null){throw new StateError('binding already attached');}else{SB=UC(exp,action,'generic-binding');}} remove(){if(!isFinal){SB();SB=null;}}}class nC extends QB{final  dC;final  children=[] ;final  nodes=[] ;nC(this.dC); listen( i, h){children.add(new lC(i,(g){h(g);VC();}));} cC( h,i){var g=new AB.Text('');children.add(new mC(()=>'${h()}',(j){g=RC(h(),g,j.newValue);},i));return g;} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); dB(){for(var g=0,h=children.length;g<h;g++ ){children[g].dB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var mB=false; SC(g, q,[ k]){if(mB)return zB(g,q);if(q==null)return (){};if(IB==null)IB=new ZB<JB>();var i;var h=m.ZC;if(g is oB){i=(g as oB).fD;}else if(g is Function){i=g;try {var j=g();if(j is List){h=m.KB;}else if(j is Iterable){h=m.KB;i=()=>g().toList();}else if((j is hB.LinkedHashMap)||(j is hB.SplayTreeMap)){h=m.cB;}else if(j is Map){h=m.bB;}}catch (LB,fB){print('error: evaluating ${k!=null?k:"<unnamed>"} ' 'watcher threw error (${LB}, ${fB})');}}else if(g is List){i=()=>g;h=m.KB;}else if(g is Iterable){i=()=>g.toList();h=m.KB;}else if((g is hB.LinkedHashMap)||(g is hB.SplayTreeMap)){i=()=>g;h=m.cB;}else if(g is Map){i=()=>g;h=m.bB;}var w=TC(h,i,q,k);var gB=IB.add(w);return gB.remove;} TC( j, g, i, h){switch (j){case m.KB:return new oC(g,i,h);case m.cB:return new qC(g,i,h);case m.bB:return new pC(g,i,h);default:return new JB(g,i,h);}} UC(h,i,[j]){var k=SC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new OB(null,g));return k;}var IB;class JB{final  eB;final  fD;final  gD;var hD;JB(this.fD,this.gD,this.eB){hD=fD();} toString()=>eB==null?'<unnamed>':eB; bC(){var g=iD();if(jD(g)){var h=hD;kD(g);gD(new OB(h,g));return true;}return false;} jD(g)=>hD!=g; kD(g){hD=g;}iD(){try {return fD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return hD;}}final  nB=10; VC(){if(IB==null)return;var g;var h=0;do{g=false;for(var i in IB){if(i.bC()){g=true;}}}while(g&& ++h<nB);if(h==nB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  WC<XC>();class oB<XC>{}class oC<XC> extends JB{oC(g, i, h):super(g,i,h){kD(iD());} jD( g){return aB(hD,g);} kD(g){hD=new List<XC>.from(g);}}class pC<RB,YC> extends JB{pC(g, i, h):super(g,i,h){kD(iD());} jD( g){var i=hD.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(hD[h]!=g[h])return true;}return false;} kD(g){hD=new Map<RB,YC>.from(g);}}class qC<RB,YC> extends JB{qC(g, i, h):super(g,i,h){kD(iD());} jD( g){return aB(g.keys,hD.keys)||aB(g.values,hD.values);} kD(g){hD=new hB.LinkedHashMap.from(g);}} aB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class m{final lD;const m.uC(this.lD);toString()=>'Enum.${lD}';static const KB=const m.uC('LIST');static const bB=const m.uC('HASH_MAP');static const cB=const m.uC('ORDERED_MAP');static const ZC=const m.uC('OTHER');}//@ sourceMappingURL=stopwatch.html_bootstrap.dart.map
