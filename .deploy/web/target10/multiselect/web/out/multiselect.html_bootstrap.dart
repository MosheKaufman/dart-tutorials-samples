import "dart:async" as HC;import "dart:isolate" as TD;import "dart:html" as FB;import "dart:collection" as iB;class AD{static const  BD="Chrome";final  wC;final  minimumVersion;const AD(this.wC,[this.minimumVersion]);}class CD{const CD();}class DD{final  name;const DD(this.name);}class ED{const ED();}class FD{const FD();}final  IB=RC({'The Cat in the Hat':true,'War and Peace':false,'Pride and Prejudice':true,'On the Road':true,'The Hunger Games':true,'The Java Tutorial':false,'The Joy of Cooking':false,'Goodnight Moon':true}); IC(){FB.window.onLoad.listen((i){var g=(FB.query('#bookselector') as FB.SelectElement).options;print(g.length);g.forEach((h)=>h.selected=IB[h.value]);});} get JC{return IB.keys.where((g)=>IB[g]).toList();} KC( g){var h=(FB.query('#bookselector') as FB.SelectElement).selectedOptions;IB.forEach((i,j)=>IB[i]=false);h.forEach((g)=>IB[g.value]=true);} LC(){var ZD=FB.document.body;final aD=new FB.Element.html('<h4>You chose:</h4>'),bD=new FB.Element.html('<select multiple="" id="bookselector">\n            <option style="display:none"></option>\n        </select>'),cD=new FB.Element.html('<option template="" repeat="key in books.keys"></option>'),dD=new FB.Element.html('<ul>\n           <li style="display:none"></li>\n        </ul>'),eD=new FB.Element.html('<li template="" repeat="selected in booksselected"></li>');var fD;var gD=new vB(ZD);fD=ZD.nodes[3].nodes[3];gD.yC(fD,()=>!IB.isEmpty,(gD){var hD,iD,jD,kD;iD=bD.clone(true);hD=iD.nodes[1];gD.loop(hD,()=>IB.keys,(h,g,gD){var j=h[g];var lD;lD=cD.clone(true);var mD=gD.CC(()=>j,false);lD.nodes.add(mD);gD.zC(()=>j,(i){if(lD.value!=i)lD.value=i;},false,false);gD.add(lD);});gD.listen(iD.onChange,(l){KC(l);});kD=dD.clone(true);jD=kD.nodes[1];gD.loop(jD,()=>JC,(h,g,gD){var w=h[g];var nD;nD=eD.clone(true);var oD=gD.CC(()=>w,false);nD.nodes.add(oD);gD.add(nD);});gD.addAll([new FB.Text('\n        \n        '),new FB.Text('\n        '),iD,new FB.Text('\n\n        '),aD.clone(true),new FB.Text('\n        '),kD,new FB.Text('\n      ')]);});gD.bB();gD.insert();}main(){xB=false;IC();LC();}class GD<KB> extends hC with t implements List<KB>{final  pD;GD([ g]):pD=g!=null?new List<KB>(g):<KB>[] ;factory GD.UD( g)=>new GD<KB>()..addAll(g); get length{if(o)AB(this,k.s,'length');return pD.length;}set length( h){var i=pD.length;if(i==h)return;if(HB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){m(this,k.MB,g,pD[g],null);}m(this,k.s,'length',i,h);}else{m(this,k.s,'length',i,h);for(int g=i;g<h;g++ ){m(this,k.LB,g,null,null);}}}pD.length=h;} operator[]( g){if(o)AB(this,k.DB,g);return pD[g];}operator[]=( g, h){var i=pD[g];if(HB(this)){m(this,k.DB,g,i,h);}pD[g]=h;} add( h){var g=pD.length;if(HB(this)){m(this,k.s,'length',g,g+1);m(this,k.LB,g,null,h);}pD.add(h);} toString(){if(o){for(int g=0;g<length;g++ ){AB(this,k.DB,g);}}return pD.toString();}}typedef  UB<q,n>();class QB<q,n> extends t implements Map<q,n>{final  qD;var rD;var sD;QB({ createMap}):qD=createMap!=null?createMap():new Map<q,n>(){rD=new MC<q,n>(this);sD=new NC<q,n>(this);}factory QB.VD( i,{ createMap}){var g=new QB<q,n>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>rD; get values=>sD; get length{if(o)AB(this,k.s,'length');return qD.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; tD( g)=>AB(this,k.DB,g); uD(){AB(this,k.s,'length');qD.keys.forEach(tD);} containsKey( g){if(o)tD(g);return qD.containsKey(g);} operator[]( g){if(o)tD(g);return qD[g];} operator[]=( h, g){var j=qD.length;var i=qD[h];qD[h]=g;if(HB(this)){if(j!=qD.length){m(this,k.s,'length',j,qD.length);m(this,k.LB,h,i,g);}else if(i!=g){m(this,k.DB,h,i,g);}}} putIfAbsent( g, j()){if(o)tD(g);var h=qD.length;var i=qD.putIfAbsent(g,j);if(HB(this)&&h!=qD.length){m(this,k.s,'length',h,qD.length);m(this,k.LB,g,null,i);}return i;} remove( g){if(o)tD(g);var h=qD.length;var i=qD.remove(g);if(HB(this)&&h!=qD.length){m(this,k.MB,g,i,null);m(this,k.s,'length',h,qD.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=qD.length;if(HB(this)&&g>0){qD.forEach((i,h){m(this,k.MB,i,h,null);});m(this,k.s,'length',g,0);}qD.clear();} forEach( g( key, value)){if(o)uD();qD.forEach(g);} toString()=>iB.Maps.mapToString(this);}class MC<q,n> extends iB.IterableBase<q>{final  qD;MC(this.qD); get iterator=>new HD<q,n>(qD);}class HD<q,n> implements Iterator<q>{final  qD;final  rD;var vD=false;HD( g):qD=g,rD=g.qD.keys.iterator; moveNext(){if(o)AB(qD,k.s,'length');return vD=rD.moveNext();} get current{var g=rD.current;if(o&&vD)qD.tD(g);return g;}}class NC<q,n> extends iB.IterableBase<n>{final  qD;NC(this.qD); get iterator=>new ID<q,n>(qD);}class ID<q,n> implements Iterator<n>{final  qD;final  rD;final  sD;var vD;ID( g):qD=g,rD=g.qD.keys.iterator,sD=g.qD.values.iterator; moveNext(){if(o)AB(qD,k.s,'length');var h=rD.moveNext();var g=sD.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return vD=g;} get current{if(o&&vD)qD.tD(rD.current);return sD.current;}}typedef  GB( e);typedef  OC( changes);typedef  JB();typedef  PC();class dB{final oldValue;final newValue;final  changes;dB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is dB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>dC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const s=1;static const DB=2;static const LB=DB|4;static const MB=DB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>eC(type,key,oldValue,newValue); toString(){var g;switch (type){case s:g='field';break;case DB:g='index';break;case LB:g='insert';break;case MB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} QC(g, i,[ l]){if(g is t){var h=g;return jB(h,(w){i(new dB(h,h,w));});}var j=new eB(g,i,l);if(!j.wD()){return TC;}return j.xD;} jB( g, i){if(g.TB==null)g.TB=new kB();var h=g.TB.add(i);return h.remove;}RC(g){if(g is Map){var h=null;if(g is iB.SplayTreeMap){h=()=>new iB.SplayTreeMap();}else if(g is iB.LinkedHashMap){h=()=>new iB.LinkedHashMap();}return new QB.VD(g,createMap:h);}if(g is Set)return new uB.WD(g);if(g is Iterable)return new GD.UD(g);return g;}class t{var TB;var SB;final  hashCode= ++t.SC;static var SC=0;} HB( g)=>g.TB!=null&&g.TB.head!=null; get o=>RB!=null; AB( g, h,i)=>RB.yD(g,h,i); m( g, j,l, h, i){if((j&(k.LB|k.MB))==0){if(h==i)return;}if(NB==null){NB=[] ;fC(UC);}if(g.SB==null){g.SB=[] ;NB.add(g);}g.SB.add(new k(j,l,h,i));} TC(){}var RB;var tB=100;var NB;var OB; UC(){var w=0;while (NB!=null||OB!=null){var j=NB;NB=null;var i=OB;OB=null;if(w++ ==tB){VC(j,i);return;}if(j!=null){for(var h in j){var cB=h.SB;h.SB=null;for(var g=h.TB.head;g!=null;g=g.next){var l=g.value;try {l(cB);}catch (sB,PB){VB(sB,PB,l,'from ${h}');}}}}if(i!=null){i.forEach((SD,rB){rB.zD();});}}} VC( l, j){var g=[] ;if(l!=null){for(var i in l){var cB=i.SB;g.add('${i} ${cB}');}}if(j!=null){for(var w in j.values){var h=w.zD();if(h!=null)g.add('${w} ${h}');}}NB=null;OB=null;var PB='exceeded notifiction limit of ${tB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';YC(PB);}class eB{static var WC=0;final  AE= ++eB.WC;final  BE;final  CE;final  DE;final  EE=new Map();final  FE=[] ;var GE=false;var HE;eB(this.BE,this.CE,this.DE); toString()=>DE!=null?'<observer ${AE}: ${DE}>':'<observer ${AE}>'; wD(){var h=RB;RB=this;try {HE=BE();if(HE is Iterable&&HE is !List&&HE is !t){HE=(HE as Iterable).toList();}}catch (g,i){VB(g,i,BE,'from ${this}');HE=null;}EE.forEach(IE);EE.clear();assert(RB==this);RB=h;JE();return FE.length>0;} KE( i){try {CE(i);}catch (g,h){VB(g,h,CE,'from ${this}');}} JE(){var g=HE;if(g is !t)return;FE.add(jB(g,(h){KE(new dB(g,g,h));}));} yD( w, PB,g){var i=EE.putIfAbsent(w,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|PB;}catch (j,l){VB(j,l,g,'hashCode or operator == from ${this}');}} IE( i, j){FE.add(jB(i,(l){if(GE)return;for(var g in l){var h=j[g.key];if(h!=null&&(h&g.type)!=0){GE=true;if(OB==null){OB=new iB.SplayTreeMap();}OB[AE]=this;return;}}}));} xD(){for(var g in FE){g();}GE=false;} zD(){if(!GE)return null;var g=HE;xD();wD();try {if(g==HE)return null;}catch (i,j){VB(i,j,g,'operator == from ${this}');return null;}var h=new dB(g,HE);KE(h);return h;}}typedef  XC( message);var YC=(g)=>print(g);typedef  ZC(error,stackTrace,obj, message);var VB=aC; aC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class uB<EB> extends gC with t implements Set<EB>{final  LE;final  ME;uB({ createMap}):LE=createMap!=null?createMap():new Map<EB,Object>(),ME=createMap;factory uB.WD( g,{ createMap}){return new uB<EB>(createMap:createMap)..addAll(g);} contains( g){if(o)AB(this,k.DB,g);return LE.containsKey(g);} add( g){var h=LE.length;LE[g]=const Object();if(h!=LE.length){m(this,k.s,'length',h,LE.length);m(this,k.LB,g,null,g);}} remove( g){if(o)AB(this,k.DB,g);var h=LE.length;LE.remove(g);if(h!=LE.length){if(HB(this)){m(this,k.MB,g,g,null);m(this,k.s,'length',h,LE.length);}return true;}return false;} clear(){if(HB(this)){for(var g in LE.keys){m(this,k.MB,g,g,null);}m(this,k.s,'length',LE.length,0);}LE.clear();} get length{if(o)AB(this,k.s,'length');return LE.length;} get isEmpty=>length==0; get iterator=>new JD<EB>(this); addAll( g)=>g.forEach(add); toString(){if(o){for(EB g in LE.keys){AB(this,k.DB,g);}}return LE.keys.toSet().toString();}}class JD<EB> implements Iterator<EB>{final  NE;final  OE;var PE=false;JD( g):NE=g,OE=g.LE.keys.iterator; moveNext(){NE.length;return PE=OE.moveNext();} get current{var g=OE.current;if(o&&PE)AB(NE,k.DB,g);return g;}}class bC{}class cC{}class BB<CB>{var QE;var RE;var SE;var TE;BB.XD( g,this.SE):TE=g{if(SE!=null)SE.UE++ ;} get next=>RE; get value=>TE;set value( g)=>TE=g; VE( g, h){RE=h;QE=g;if(g!=null)g.RE=this;if(h!=null)h.QE=this;return this;} append( g)=>new BB<CB>.XD(g,SE).VE(this,RE); remove(){if(SE==null)return;SE.UE-- ;if(QE!=null){QE.RE=RE;}else{SE.WE=RE;}if(RE!=null){RE.QE=QE;}else{SE.XE=QE;}RE=null;QE=null;SE=null;}}class kB<CB> extends iB.IterableBase<CB>{var WE;var XE; get length=>UE;var UE=0;kB(){} get head=>WE; add( h){var g=new BB<CB>.XD(h,this);if(XE==null)return WE=XE=g;return XE=g.VE(XE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new KD<CB>(this);}class KD<CB> implements Iterator<CB>{var YE;var SE;var ZE;var aE=-1;KD(this.SE){YE=new List<BB>(SE.length);var h=0;var g=SE.head;while (g!=null){YE[h++ ]=g;g=g.next;}} get current=>ZE; moveNext(){do{aE++ ;}while(aE<YE.length&&YE[aE].SE!=SE);if(aE<YE.length){ZE=YE[aE].value;return true;}else{ZE=null;return false;}}}WB(h,g)=>h.hashCode*31+g.hashCode;dC(h,g,i)=>WB(WB(h,g),i);eC(g,i,h,j)=>WB(WB(g,i),WB(h,j)); fC( h()){var g=new TD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class gC extends iB.IterableBase<dynamic>{}abstract class hC extends iB.ListMixin<dynamic>{} iC(i, g,[ h]){var j=i is bC;if(h==null){h=i.toString();}if(!j&&g is FB.Text){g.text=h;}else{var l=g;g=j?new FB.Element.html(h):new FB.Text(h);l.replaceWith(g);}return g;} jC(g){if(g is cC)return g.toString();g=g.toString();return lC(g)?g:'#';}const kC=const["http","https","ftp","mailto"]; lC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return kC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class XB{ bB(){} insert(); remove();}class LD extends XB{final  DC;var bE;final  listener;LD(this.DC,this.listener); insert(){bE=DC.listen(listener);} remove(){bE.cancel();bE=null;}}class MD extends XB{final exp;final  action;final  isFinal;var u;MD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new dB(null,exp()));}else if(u!=null){throw new StateError('binding already attached');}else{u=fB(exp,action,'generic-binding');}} remove(){if(!isFinal){u();u=null;}}}class ND extends XB{final  GC;final  pB;final  EC;final  isFinal;var u;ND(this.pB,this.GC,this.EC,this.isFinal); cE(g){GC(EC?jC(g):g);} insert(){if(isFinal){cE(pB());}else if(u!=null){throw new StateError('data binding already attached.');}else{u=fB(pB,(g)=>cE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){u();u=null;}}}class vB extends XB{final  qB;final  children=[] ;final  nodes=[] ;vB(this.qB); listen( i, h){children.add(new LD(i,(g){h(g);rC();}));} CC( h,i){var g=new FB.Text('');children.add(new MD(()=>'${h()}',(j){g=iC(h(),g,j.newValue);},i));return g;} zC(g,j,h,[i=false]){children.add(new ND(g,j,i,h));} yC( h,g,i){children.add(new nC(h,g,i));} loop( h,g,i){children.add(new OD(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); bB(){for(var g=0,h=children.length;g<h;g++ ){children[g].bB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class wB extends vB{final exp;var u;wB( g,this.exp):super(g); bB(){} insert(){super.bB();if(nodes.length>0){var i=qB.parentNode;var j=qB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  mC( template);class nC extends wB{var hB=false;final  BC;nC( h,g,this.BC):super(h,g); insert(){u=fB(exp,(g){if(!hB&&g.newValue){BC(this);super.insert();hB=true;}else if(hB&&!g.newValue){super.remove();hB=false;}},'conditional-binding');} remove(){super.remove();u();u=null;}}typedef  oC( list, index, template);class OD extends wB{final  FC;OD( h,g,this.FC):super(h,g); insert(){u=fB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){FC(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();u();u=null;}}var xB=false; pC(g, w,[ l]){if(xB)return QC(g,w);if(w==null)return (){};if(YB==null)YB=new kB<ZB>();var i;var h=v.vC;if(g is AC){i=(g as AC).dE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=v.aB;}else if(j is Iterable){h=v.aB;i=()=>g().toList();}else if((j is iB.LinkedHashMap)||(j is iB.SplayTreeMap)){h=v.nB;}else if(j is Map){h=v.mB;}}catch (cB,rB){print('error: evaluating ${l!=null?l:"<unnamed>"} ' 'watcher threw error (${cB}, ${rB})');}}else if(g is List){i=()=>g;h=v.aB;}else if(g is Iterable){i=()=>g.toList();h=v.aB;}else if((g is iB.LinkedHashMap)||(g is iB.SplayTreeMap)){i=()=>g;h=v.nB;}else if(g is Map){i=()=>g;h=v.mB;}var PB=qC(h,i,w,l);var sB=YB.add(PB);return sB.remove;} qC( j, g, i, h){switch (j){case v.aB:return new PD(g,i,h);case v.nB:return new RD(g,i,h);case v.mB:return new QD(g,i,h);default:return new ZB(g,i,h);}} fB(h,i,[j]){var l=pC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new dB(null,g));return l;}var YB;class ZB{final  oB;final  dE;final  eE;var fE;ZB(this.dE,this.eE,this.oB){fE=dE();} toString()=>oB==null?'<unnamed>':oB; xC(){var g=gE();if(hE(g)){var h=fE;iE(g);eE(new dB(h,g));return true;}return false;} hE(g)=>fE!=g; iE(g){fE=g;}gE(){try {return dE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return fE;}}final  yB=10; rC(){if(YB==null)return;var g;var h=0;do{g=false;for(var i in YB){if(i.xC()){g=true;}}}while(g&& ++h<yB);if(h==yB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  zB<sC>();typedef  tC<sC>( value);class AC<sC>{}class PD<sC> extends ZB{PD(g, i, h):super(g,i,h){iE(gE());} hE( g){return lB(fE,g);} iE(g){fE=new List<sC>.from(g);}}class QD<gB,uC> extends ZB{QD(g, i, h):super(g,i,h){iE(gE());} hE( g){var i=fE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(fE[h]!=g[h])return true;}return false;} iE(g){fE=new Map<gB,uC>.from(g);}}class RD<gB,uC> extends ZB{RD(g, i, h):super(g,i,h){iE(gE());} hE( g){return lB(g.keys,fE.keys)||lB(g.values,fE.values);} iE(g){fE=new iB.LinkedHashMap.from(g);}} lB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class v{final jE;const v.YD(this.jE);toString()=>'Enum.${jE}';static const aB=const v.YD('LIST');static const mB=const v.YD('HASH_MAP');static const nB=const v.YD('ORDERED_MAP');static const vC=const v.YD('OTHER');}//@ sourceMappingURL=multiselect.html_bootstrap.dart.map
