import "dart:html" as n;import "dart:json" as fD;import "dart:isolate" as BE;import "dart:async" as hB;import "dart:collection" as mB;class gD{static const  hD="Chrome";static const  iD="Firefox";static const  jD="Internet Explorer";static const  kD="Safari";final  QD;final  minimumVersion;const gD(this.QD,[this.minimumVersion]);}class lD{const lD();}class mD{final  name;const mD(this.name);}class nD{const nD();}class oD{const oD();} LC(){} MC(){var HE=n.document.body;var IE;var JE=new oC(HE);IE=HE.nodes[3].nodes[1];JE.WB(new pD()..host=IE);JE.gB();JE.insert();}main(){CC=true;LC();MC();}class pD extends GC with v{var KE;static final NC=new n.DocumentFragment.html('''
      <div class="entry">
        <label>First name?</label>
        <input type="text">
      </div>
      <div class="entry">
        <label>Favorite quote?</label>
        <textarea></textarea>
      </div> 
      <div class="entry">
        <label>Favorite color?</label>
        <input type="color">
      </div>
      <div class="entry">
        <label>Birthday?</label>
        <input type="date">
      </div>
      <div class="entry">
        <label>Favorite volume?</label>
        <input type="range" min="0" max="11">  
      </div>
      <div class="entry">
        <label>Cat or dog?</label>
        <input name="catOrDog" type="radio" value="cat">Cat
        <input name="catOrDog" type="radio" value="dog">Dog
        <input name="catOrDog" type="radio" value="iguana">Iguana
      </div>
      <div>
        <label>Favorite type of music?</label>
        <select>
          <option>Classical</option>
          <option>Country</option>
          <option>Rock</option>
          <option>Silence</option>
        </select>
      </div>
      <div class="entry">
        <label for="zombies">Check for zombies. </label>
        <input type="checkbox" id="zombies">
      </div>
      <div class="entry">
        <label>Favorite things?</label>
        <input type="checkbox" id="kittens">
          <label for="kittens" class="andrews">Kittens</label>
        <input type="checkbox" id="raindrops">
          <label for="raindrops" class="andrews">Raindrops</label>
        <input type="checkbox" id="mittens">
          <label for="mittens" class="andrews">Mittens</label>
        <input type="checkbox" id="kettles">
          <label for="kettles" class="andrews">Kettles</label>
      </div>

      <div class="submitarea">
        <input type="submit" value="Submit">
        <input type="reset" value="Clear"> <br>    
        <textarea disabled="" class="responsetext"></textarea>
      </div>
      
      <script type="application/dart" src="xslambookform.dart">
      </script>
    ''');var LE,ME,NE,OE,PE,QE,RE,SE,TE,UE,VE,WE,XE,YE;var ZE;var aE;var bE,cE; UD(){var dE=createShadowRoot("x-slambook-form");cD("x-slambook-form",new uB({"x-slambook-form":"[is=\"x-slambook-form\"]"}));KE=VD("x-slambook-form");aE=new oC(dE);dE.nodes.add(NC.clone(true));LE=dE.nodes[1].nodes[3];aE.listen(LE.onInput,(h){l['firstName']=LE.value;});aE.BB(()=>l['firstName'],(g){if(LE.value!=g)LE.value=g;},false,false);cE=dE.nodes[3].nodes[3];aE.listen(cE.onInput,(h){l['favoriteQuote']=cE.value;});aE.BB(()=>l['favoriteQuote'],(g){if(cE.value!=g)cE.value=g;},false,false);TE=dE.nodes[5].nodes[3];aE.listen(TE.onInput,(h){l['favoriteColor']=TE.value;});aE.BB(()=>l['favoriteColor'],(g){if(TE.value!=g)TE.value=g;},false,false);UE=dE.nodes[7].nodes[3];aE.listen(UE.onInput,(h){l['birthday']=UE.value;});aE.BB(()=>l['birthday'],(g){if(UE.value!=g)UE.value=g;},false,false);VE=dE.nodes[9].nodes[3];aE.listen(VE.onInput,(h){l['volume']=VE.value;});aE.BB(()=>l['volume'],(g){if(VE.value!=g)VE.value=g;},false,false);WE=dE.nodes[11].nodes[3];aE.listen(WE.onChange,(h){l['catOrDog']='cat';});aE.BB(()=>l['catOrDog']=='cat',(g){if(WE.checked!=g)WE.checked=g;},false,false);XE=dE.nodes[11].nodes[5];aE.listen(XE.onChange,(h){l['catOrDog']='dog';});aE.BB(()=>l['catOrDog']=='dog',(g){if(XE.checked!=g)XE.checked=g;},false,false);YE=dE.nodes[11].nodes[7];aE.listen(YE.onChange,(h){l['catOrDog']='iguana';});aE.BB(()=>l['catOrDog']=='iguana',(g){if(YE.checked!=g)YE.checked=g;},false,false);ZE=dE.nodes[13].nodes[3];aE.listen(ZE.onChange,(h){l['music']=ZE.selectedIndex;});aE.BB(()=>l['music'],(g){if(ZE.selectedIndex!=g)ZE.selectedIndex=g;},false,false);ME=dE.nodes[15].nodes[3];aE.listen(ME.onChange,(h){l['zombies']=ME.checked;});aE.BB(()=>l['zombies'],(g){if(ME.checked!=g)ME.checked=g;},false,false);NE=dE.nodes[17].nodes[3];aE.listen(NE.onChange,(h){GB['kittens']=NE.checked;});aE.BB(()=>GB['kittens'],(g){if(NE.checked!=g)NE.checked=g;},false,false);OE=dE.nodes[17].nodes[7];aE.listen(OE.onChange,(h){GB['raindrops']=OE.checked;});aE.BB(()=>GB['raindrops'],(g){if(OE.checked!=g)OE.checked=g;},false,false);PE=dE.nodes[17].nodes[11];aE.listen(PE.onChange,(h){GB['mittens']=PE.checked;});aE.BB(()=>GB['mittens'],(g){if(PE.checked!=g)PE.checked=g;},false,false);QE=dE.nodes[17].nodes[15];aE.listen(QE.onChange,(h){GB['kettles']=QE.checked;});aE.BB(()=>GB['kettles'],(g){if(QE.checked!=g)QE.checked=g;},false,false);RE=dE.nodes[19].nodes[1];aE.listen(RE.onClick,(h){eD(h);});SE=dE.nodes[19].nodes[3];aE.listen(SE.onClick,(h){bD(h);});bE=dE.nodes[19].nodes[7];aE.listen(bE.onInput,(h){XB=bE.value;});aE.BB(()=>XB,(g){if(bE.value!=g)bE.value=g;},false,false);aE.gB();} XD(){aE.insert();} aD(){aE.remove();aE=LE=cE=TE=UE=VE=WE=XE=YE=ZE=ME=NE=OE=PE=QE=RE=SE=bE=null;}var eE=yB({'kittens':true,'raindrops':false,'mittens':true,'kettles':false}); get GB{if(t){AB(this,k.s,'favoriteThings');}return eE;}var gE=yB({'firstName':'mem','favoriteQuote':'Enjoy all your meals.','favoriteColor':'#4169E1','birthday':'1963-08-30','volume':'11','catOrDog':'dog','music':2,'zombies':true}); get l{if(t){AB(this,k.s,'theData');}return gE;}var hE=''; get XB{if(t){AB(this,k.s,'serverResponse');}return hE;}set XB( g){if(JB(this)){o(this,k.s,'serverResponse',hE,g);}hE=g;}var request; eD( g){g.preventDefault();request=new n.HttpRequest();request.onReadyStateChange.listen(onData);var h='http://127.0.0.1:4040';request.open('POST',h);request.send(dD());} onData(iE){if(request.readyState==n.HttpRequest.DONE&&request.status==200){XB='Server Sez: '+request.responseText;}else if(request.readyState==n.HttpRequest.DONE&&request.status==0){XB='No server';}} bD( g){g.preventDefault();GB['kittens']=false;GB['raindrops']=false;GB['mittens']=false;GB['kettles']=false;l['firstName']='';l['favoriteQuote']='';l['favoriteColor']='#FFFFFF';l['birthday']='2013-01-01';l['volume']='0';l['catOrDog']='cat';l['music']=0;l['zombies']=false;XB='Data cleared.';} dD(){l['favoriteThings']=GB;return fD.stringify(l);}}class OC<KB> extends kC with v implements List<KB>{final  jE;OC([ g]):jE=g!=null?new List<KB>(g):<KB>[] ;factory OC.CE( g)=>new OC<KB>()..addAll(g); get length{if(t)AB(this,k.s,'length');return jE.length;}set length( h){var i=jE.length;if(i==h)return;if(JB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){o(this,k.MB,g,jE[g],null);}o(this,k.s,'length',i,h);}else{o(this,k.s,'length',i,h);for(int g=i;g<h;g++ ){o(this,k.OB,g,null,null);}}}jE.length=h;} operator[]( g){if(t)AB(this,k.HB,g);return jE[g];}operator[]=( g, h){var i=jE[g];if(JB(this)){o(this,k.HB,g,i,h);}jE[g]=h;} sublist( h,[ g])=>new OC<KB>.CE(super.sublist(h,g)); add( h){var g=jE.length;if(JB(this)){o(this,k.s,'length',g,g+1);o(this,k.OB,g,null,h);}jE.add(h);} removeRange( h, g){if(g==0)return;BC.iC(this,h,g);if(JB(this)){for(int i=h;i<g;i++ ){o(this,k.MB,i,this[i],null);}}BC.hC(this,h+g,this,h,this.length-g-h);this.length=this.length-g;} toString(){if(t){for(int g=0;g<length;g++ ){AB(this,k.HB,g);}}return jE.toString();}}typedef  ZB<w,u>();class RB<w,u> extends v implements Map<w,u>{final  kE;var lE;var mE;RB({ createMap}):kE=createMap!=null?createMap():new Map<w,u>(){lE=new PC<w,u>(this);mE=new QC<w,u>(this);}factory RB.DE( i,{ createMap}){var g=new RB<w,u>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>lE; get values=>mE; get length{if(t)AB(this,k.s,'length');return kE.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; nE( g)=>AB(this,k.HB,g); oE(){AB(this,k.s,'length');kE.keys.forEach(nE);} containsKey( g){if(t)nE(g);return kE.containsKey(g);} operator[]( g){if(t)nE(g);return kE[g];} operator[]=( h, g){var j=kE.length;var i=kE[h];kE[h]=g;if(JB(this)){if(j!=kE.length){o(this,k.s,'length',j,kE.length);o(this,k.OB,h,i,g);}else if(i!=g){o(this,k.HB,h,i,g);}}} putIfAbsent( g, j()){if(t)nE(g);var h=kE.length;var i=kE.putIfAbsent(g,j);if(JB(this)&&h!=kE.length){o(this,k.s,'length',h,kE.length);o(this,k.OB,g,null,i);}return i;} remove( g){if(t)nE(g);var h=kE.length;var i=kE.remove(g);if(JB(this)&&h!=kE.length){o(this,k.MB,g,i,null);o(this,k.s,'length',h,kE.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=kE.length;if(JB(this)&&g>0){kE.forEach((i,h){o(this,k.MB,i,h,null);});o(this,k.s,'length',g,0);}kE.clear();} forEach( g( key, value)){if(t)oE();kE.forEach(g);} toString()=>mB.Maps.mapToString(this);}class PC<w,u> extends mB.IterableBase<w>{final  kE;PC(this.kE); get iterator=>new qD<w,u>(kE);}class qD<w,u> implements Iterator<w>{final  kE;final  lE;var pE=false;qD( g):kE=g,lE=g.kE.keys.iterator; moveNext(){if(t)AB(kE,k.s,'length');return pE=lE.moveNext();} get current{var g=lE.current;if(t&&pE)kE.nE(g);return g;}}class QC<w,u> extends mB.IterableBase<u>{final  kE;QC(this.kE); get iterator=>new rD<w,u>(kE);}class rD<w,u> implements Iterator<u>{final  kE;final  lE;final  mE;var pE;rD( g):kE=g,lE=g.kE.keys.iterator,mE=g.kE.values.iterator; moveNext(){if(t)AB(kE,k.s,'length');var h=lE.moveNext();var g=mE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return pE=g;} get current{if(t&&pE)kE.nE(lE.current);return mE.current;}}typedef  LB( e);typedef  RC( changes);typedef  SB();typedef  SC();class iB{final oldValue;final newValue;final  changes;iB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is iB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>eC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const s=1;static const HB=2;static const OB=HB|4;static const MB=HB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>fC(type,key,oldValue,newValue); toString(){var g;switch (type){case s:g='field';break;case HB:g='index';break;case OB:g='insert';break;case MB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} TC(g, i,[ m]){if(g is v){var h=g;return nB(h,(q){i(new iB(h,h,q));});}var j=new jB(g,i,m);if(!j.qE()){return VC;}return j.rE;} nB( g, i){if(g.VB==null)g.VB=new oB();var h=g.VB.add(i);return h.remove;}yB(g){if(g is Map){var h=null;if(g is mB.SplayTreeMap){h=()=>new mB.SplayTreeMap();}else if(g is mB.LinkedHashMap){h=()=>new mB.LinkedHashMap();}return new RB.DE(g,createMap:h);}if(g is Set)return new AC.EE(g);if(g is Iterable)return new OC.CE(g);return g;}class v{var VB;var UB;final  hashCode= ++v.UC;static var UC=0;} JB( g)=>g.VB!=null&&g.VB.head!=null; get t=>TB!=null; AB( g, h,i)=>TB.sE(g,h,i); o( g, j,m, h, i){if((j&(k.OB|k.MB))==0){if(h==i)return;}if(PB==null){PB=[] ;gC(WC);}if(g.UB==null){g.UB=[] ;PB.add(g);}g.UB.add(new k(j,m,h,i));} VC(){}var TB;var zB=100;var PB;var QB; WC(){var q=0;while (PB!=null||QB!=null){var j=PB;PB=null;var i=QB;QB=null;if(q++ ==zB){XC(j,i);return;}if(j!=null){for(var h in j){var NB=h.UB;h.UB=null;for(var g=h.VB.head;g!=null;g=g.next){var m=g.value;try {m(NB);}catch (YB,CB){aB(YB,CB,m,'from ${h}');}}}}if(i!=null){i.forEach((AE,xB){xB.tE();});}}} XC( m, j){var g=[] ;if(m!=null){for(var i in m){var NB=i.UB;g.add('${i} ${NB}');}}if(j!=null){for(var q in j.values){var h=q.tE();if(h!=null)g.add('${q} ${h}');}}PB=null;QB=null;var CB='exceeded notifiction limit of ${zB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';aC(CB);}class jB{static var YC=0;final  uE= ++jB.YC;final  vE;final  wE;final  xE;final  yE=new Map();final  zE=[] ;var AF=false;var BF;jB(this.vE,this.wE,this.xE); toString()=>xE!=null?'<observer ${uE}: ${xE}>':'<observer ${uE}>'; qE(){var h=TB;TB=this;try {BF=vE();if(BF is Iterable&&BF is !List&&BF is !v){BF=(BF as Iterable).toList();}}catch (g,i){aB(g,i,vE,'from ${this}');BF=null;}yE.forEach(CF);yE.clear();assert(TB==this);TB=h;DF();return zE.length>0;} EF( i){try {wE(i);}catch (g,h){aB(g,h,wE,'from ${this}');}} DF(){var g=BF;if(g is !v)return;zE.add(nB(g,(h){EF(new iB(g,g,h));}));} sE( q, CB,g){var i=yE.putIfAbsent(q,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|CB;}catch (j,m){aB(j,m,g,'hashCode or operator == from ${this}');}} CF( i, j){zE.add(nB(i,(m){if(AF)return;for(var g in m){var h=j[g.key];if(h!=null&&(h&g.type)!=0){AF=true;if(QB==null){QB=new mB.SplayTreeMap();}QB[uE]=this;return;}}}));} rE(){for(var g in zE){g();}AF=false;} tE(){if(!AF)return null;var g=BF;rE();qE();try {if(g==BF)return null;}catch (i,j){aB(i,j,g,'operator == from ${this}');return null;}var h=new iB(g,BF);EF(h);return h;}}typedef  ZC( message);var aC=(g)=>print(g);typedef  bC(error,stackTrace,obj, message);var aB=cC; cC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class AC<IB> extends jC with v implements Set<IB>{final  FF;final  GF;AC({ createMap}):FF=createMap!=null?createMap():new Map<IB,Object>(),GF=createMap;factory AC.EE( g,{ createMap}){return new AC<IB>(createMap:createMap)..addAll(g);} contains( g){if(t)AB(this,k.HB,g);return FF.containsKey(g);} add( g){var h=FF.length;FF[g]=const Object();if(h!=FF.length){o(this,k.s,'length',h,FF.length);o(this,k.OB,g,null,g);}} remove( g){if(t)AB(this,k.HB,g);var h=FF.length;FF.remove(g);if(h!=FF.length){if(JB(this)){o(this,k.MB,g,g,null);o(this,k.s,'length',h,FF.length);}return true;}return false;} clear(){if(JB(this)){for(var g in FF.keys){o(this,k.MB,g,g,null);}o(this,k.s,'length',FF.length,0);}FF.clear();} get length{if(t)AB(this,k.s,'length');return FF.length;} get isEmpty=>length==0; get iterator=>new sD<IB>(this); addAll( g)=>g.forEach(add); toString(){if(t){for(IB g in FF.keys){AB(this,k.HB,g);}}return FF.keys.toSet().toString();}}class sD<IB> implements Iterator<IB>{final  HF;final  IF;var JF=false;sD( g):HF=g,IF=g.FF.keys.iterator; moveNext(){HF.length;return JF=IF.moveNext();} get current{var g=IF.current;if(t&&JF)AB(HF,k.HB,g);return g;}}class dC{}class EB<FB>{var KF;var LF;var MF;var NF;EB.FE( g,this.MF):NF=g{if(MF!=null)MF.OF++ ;} get next=>LF; get value=>NF;set value( g)=>NF=g; PF( g, h){LF=h;KF=g;if(g!=null)g.LF=this;if(h!=null)h.KF=this;return this;} append( g)=>new EB<FB>.FE(g,MF).PF(this,LF); remove(){if(MF==null)return;MF.OF-- ;if(KF!=null){KF.LF=LF;}else{MF.QF=LF;}if(LF!=null){LF.KF=KF;}else{MF.RF=KF;}LF=null;KF=null;MF=null;}}class oB<FB> extends mB.IterableBase<FB>{var QF;var RF; get length=>OF;var OF=0;oB(){} get head=>QF; add( h){var g=new EB<FB>.FE(h,this);if(RF==null)return QF=RF=g;return RF=g.PF(RF,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new tD<FB>(this);}class tD<FB> implements Iterator<FB>{var SF;var MF;var TF;var UF=-1;tD(this.MF){SF=new List<EB>(MF.length);var h=0;var g=MF.head;while (g!=null){SF[h++ ]=g;g=g.next;}} get current=>TF; moveNext(){do{UF++ ;}while(UF<SF.length&&SF[UF].MF!=MF);if(UF<SF.length){TF=SF[UF].value;return true;}else{TF=null;return false;}}}bB(h,g)=>h.hashCode*31+g.hashCode;eC(h,g,i)=>bB(bB(h,g),i);fC(g,i,h,j)=>bB(bB(g,i),bB(h,j)); gC( h()){var g=new BE.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}class BC{static  hC( q, g, CB, i, m){if(g==null)g=0;if(i==null)i=0;if(g<i){for(int h=g+m-1,j=i+m-1;h>=g;h-- ,j-- ){CB[j]=q[h];}}else{for(int h=g,j=i;h<g+m;h++ ,j++ ){CB[j]=q[h];}}}static  iC( j, h, g){if(g<0){throw new ArgumentError("negative length ${g}");}if(h<0){var i="${h} must be greater than or equal to 0";throw new RangeError(i);}if(h+g>j.length){var i="${h} + ${g} must be in the range [0..${j.length})";throw new RangeError(i);}}}abstract class jC extends mB.IterableBase<dynamic>{}abstract class kC extends mB.ListMixin<dynamic>{} lC(g){if(g is dC)return g.toString();g=g.toString();return nC(g)?g:'#';}const mC=const["http","https","ftp","mailto"]; nC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return mC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class cB{ gB(){} insert(); remove();}class uD extends cB{final  IC;var VF;final  listener;uD(this.IC,this.listener); insert(){VF=IC.listen(listener);} remove(){VF.cancel();VF=null;}}class vD extends cB{final  KC;final  wB;final  JC;final  isFinal;var lB;vD(this.wB,this.KC,this.JC,this.isFinal); WF(g){KC(JC?lC(g):g);} insert(){if(isFinal){WF(wB());}else if(lB!=null){throw new StateError('data binding already attached.');}else{lB=rC(wB,(g)=>WF(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){lB();lB=null;}}}class wD extends cB{final WB;wD(this.WB); gB(){WB..UD()..TD()..SD();} insert(){WB..WD()..XD();} remove(){WB..aD()..ZD();}}class oC extends cB{final  YD;final  children=[] ;final  nodes=[] ;oC(this.YD); listen( i, h){children.add(new uD(i,(g){h(g);sC();}));} BB(g,j,h,[i=false]){children.add(new vD(g,j,i,h));} WB( g){children.add(new wD(g));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); gB(){for(var g=0,h=children.length;g<h;g++ ){children[g].gB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var CC=false; pC(g, q,[ m]){if(CC)return TC(g,q);if(q==null)return (){};if(dB==null)dB=new oB<eB>();var i;var h=DB.wC;if(g is FC){i=(g as FC).XF;}else if(g is Function){i=g;try {var j=g();if(j is List){h=DB.fB;}else if(j is Iterable){h=DB.fB;i=()=>g().toList();}else if((j is mB.LinkedHashMap)||(j is mB.SplayTreeMap)){h=DB.rB;}else if(j is Map){h=DB.qB;}}catch (NB,xB){print('error: evaluating ${m!=null?m:"<unnamed>"} ' 'watcher threw error (${NB}, ${xB})');}}else if(g is List){i=()=>g;h=DB.fB;}else if(g is Iterable){i=()=>g.toList();h=DB.fB;}else if((g is mB.LinkedHashMap)||(g is mB.SplayTreeMap)){i=()=>g;h=DB.rB;}else if(g is Map){i=()=>g;h=DB.qB;}var CB=qC(h,i,q,m);var YB=dB.add(CB);return YB.remove;} qC( j, g, i, h){switch (j){case DB.fB:return new xD(g,i,h);case DB.rB:return new zD(g,i,h);case DB.qB:return new yD(g,i,h);default:return new eB(g,i,h);}} rC(h,i,[j]){var m=pC(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new iB(null,g));return m;}var dB;class eB{final  vB;final  XF;final  YF;var ZF;eB(this.XF,this.YF,this.vB){ZF=XF();} toString()=>vB==null?'<unnamed>':vB; RD(){var g=aF();if(bF(g)){var h=ZF;cF(g);YF(new iB(h,g));return true;}return false;} bF(g)=>ZF!=g; cF(g){ZF=g;}aF(){try {return XF();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return ZF;}}final  DC=10; sC(){if(dB==null)return;var g;var h=0;do{g=false;for(var i in dB){if(i.RD()){g=true;}}}while(g&& ++h<DC);if(h==DC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  EC<tC>();typedef  uC<tC>( value);class FC<tC>{}class xD<tC> extends eB{xD(g, i, h):super(g,i,h){cF(aF());} bF( g){return pB(ZF,g);} cF(g){ZF=new List<tC>.from(g);}}class yD<kB,vC> extends eB{yD(g, i, h):super(g,i,h){cF(aF());} bF( g){var i=ZF.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(ZF[h]!=g[h])return true;}return false;} cF(g){ZF=new Map<kB,vC>.from(g);}}class zD<kB,vC> extends eB{zD(g, i, h):super(g,i,h){cF(aF());} bF( g){return pB(g.keys,ZF.keys)||pB(g.values,ZF.values);} cF(g){ZF=new mB.LinkedHashMap.from(g);}} pB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class DB{final dF;const DB.GE(this.dF);toString()=>'Enum.${dF}';static const fB=const DB.GE('LIST');static const qB=const DB.GE('HASH_MAP');static const rB=const DB.GE('ORDERED_MAP');static const wC=const DB.GE('OTHER');}abstract class GC implements n.Element{var eF;var fF;var gF={};var hF=new uB({}); VD( g)=>hF; cD( h,var g){hF=g;} get host{if(eF==null)throw new StateError('host element has not been set.');return eF;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}var h=g.xtag;if(h!=null&&h!=g){throw new ArgumentError('host must not have its xtag property set.');}if(eF!=null){throw new StateError('host can only be set once.');}g.xtag=this;eF=g;}createShadowRoot([ g]){var h=iF();if(g!=null){gF[g]=h;}return h;}iF(){if(HC){return host.createShadowRoot();}if(fF==null)fF=[] ;fF.add(new n.DivElement());return fF.last;} TD(){} WD(){} ZD(){} SD(){if(HC)return;if(fF.length==0){throw new StateError('Distribution algorithm requires at least one shadow' ' root and can only be run once.');}var j=fF;var g=j.removeLast();var CB=g;var q=new List.from(nodes);var m=[] ;var NB=[] ;while (true){q=jF(g,q);var h=g.query('shadow');if(h!=null){if(j.length>0){g=j.removeLast();m.add(h);NB.add(g);}else{tB(h,q);break;}}else{break;}}for(int i=0;i<m.length;i++ ){var h=m[i];var g=NB[i];tB(h,g.nodes);}nodes.clear();nodes.addAll(CB.nodes);for(var YB in gF.keys){if(gF[YB]==CB){gF[YB]=this;break;}}} jF( CB, j){for(var g in CB.queryAll('content')){if(!yC(g))continue;var i=g.attributes['select'];if(i==null||i=='')i='*';var h=[] ;var q=[] ;for(var m in j){(xC(m,i)?h:q).add(m);}if(h.length==0){h=g.nodes;}tB(g,h);j=q;}return j;}static  xC( h, g){if(h is !n.Element)return g=='*';return (h as n.Element).matches(g);}static  sB( g)=>g.tagName=='CONTENT'||g.tagName=='SHADOW';static  yC( g){assert(sB(g));for(g=g.parent;g!=null;g=g.parent){if(sB(g))return false;}return true;}static  tB( g, h){assert(sB(g));g.parent.insertAllBefore(h,g);g.remove();} get nodes=>host.nodes; replaceWith( g){host.replaceWith(g);} remove()=>host.remove();set text( g){host.text=g;} contains( g)=>host.contains(g); insertBefore( g, h)=>host.insertBefore(g,h); insertAllBefore( g, h)=>host.insertAllBefore(g,h); get attributes=>host.attributes; get children=>host.children; clone( g)=>host.clone(g); get parent=>host.parent; get parentNode=>host.parentNode; get nodeValue=>host.nodeValue; get id=>host.id;set id( g){host.id=g;} set innerHtml( g){host.innerHtml=g;} get tagName=>host.tagName; matches( g)=>host.matches(g); query( g)=>host.query(g); queryAll( g)=>host.queryAll(g); get DD=>host.DD; get ED=>host.ED; get HD=>host.HD; FD( g)=>host.FD(g); GD( g)=>host.GD(g); KD( g)=>host.KD(g); LD( g)=>host.LD(g); PD( h, g)=>host.PD(h,g);get BD=>host.BD; get CD=>host.CD; get firstChild=>host.firstChild; get localName=>host.localName; get ID=>host.ID; get JD=>host.JD; AD( i, g,[ h]){host.AD(i,g,h);} MD( g)=>host.MD(g); ND( i, g,[ h]){host.ND(i,g,h);} OD( g, h)=>host.OD(g,h);get xtag=>host.xtag;set xtag(g){host.xtag=g;} append( g)=>host.append(g); get onChange=>host.onChange; get onClick=>host.onClick; get onInput=>host.onInput;}class uB{final  kF;uB(this.kF); operator[]( g)=>kF[g];}var zC=false; get HC=>zC&&n.ShadowRoot.supported;//@ sourceMappingURL=slambook.html_bootstrap.dart.map
