import "dart:isolate" as gD;import "dart:html" as GB;import "dart:async" as TC;import "dart:collection" as lB;class KD{static const  LD="Chrome";static const  MD="Firefox";static const  ND="Internet Explorer";static const  OD="Safari";final  HD;final  minimumVersion;const KD(this.HD,[this.minimumVersion]);}class PD{const PD();}class QD{final  name;const QD(this.name);}class RD{const RD();}class SD{const SD();}var BC='pumpernickel';var mB=BC.split("");var nB=EC(BC.replaceAll(new RegExp('.'),'-').split(""));var eB=EC(new List());final HB=new t();var oB=''; get UB{if(o){u(HB,k.m,'guessedletter');}return oB;}set UB( g){if(EB(HB)){l(HB,k.m,'guessedletter',oB,g);}oB=g;}var pB=false; get CC{if(o){u(HB,k.m,'dead');}return pB;}set CC( g){if(EB(HB)){l(HB,k.m,'dead',pB,g);}pB=g;}var qB=false; get DC{if(o){u(HB,k.m,'won');}return qB;}set DC( g){if(EB(HB)){l(HB,k.m,'won',qB,g);}qB=g;} UC(){} VC(){const  g=7;if(mB.contains(UB)){WC();if(!nB.contains('-')){DC=true;}}else{eB.add(UB);if(eB.length==g){CC=true;}}UB='';} WC(){for(int g=0;g<mB.length;g++ ){if(mB[g]==UB){nB[g]=UB;}}} XC(){var nD=GB.document.body;final oD=new GB.InputElement(),pD=new GB.Element.html('<p>\n              <template></template>\n            </p>'),qD=new GB.Element.html('<p id="wrong">\n              <template></template>\n            </p>');var rD,sD,tD,uD;var vD=new HC(nD);rD=nD.nodes[3].nodes[1];vD.loop(rD,()=>nB,(h,g,vD){var n=h[g];var wD=vD.OC(()=>n,false);vD.addAll([new GB.Text(' '),wD,new GB.Text(' ')]);});tD=nD.nodes[5].nodes[1];vD.jB(tD,()=>!CC&&!DC,(vD){var xD,yD,zD,AE,BE;xD=oD.clone(true);vD.listen(xD.onInput,(i){UB=xD.value;});vD.listen(xD.onKeyUp,(i){i=new GB.KeyEvent(i);VC();});vD.JD(()=>UB,(j){if(xD.value!=j)xD.value=j;},false,false);zD=pD.clone(true);yD=zD.nodes[1];vD.jB(yD,()=>eB.length!=0,(vD){vD.add(new GB.Text(' Sorry! The word contains no: '));});BE=qD.clone(true);AE=BE.nodes[1];vD.loop(AE,()=>eB,(h,g,vD){var AB=h[g];var CE=vD.OC(()=>AB,false);vD.addAll([new GB.Text(' '),CE,new GB.Text(' ')]);});vD.addAll([new GB.Text('\n            Guess a letter...\n            '),xD,new GB.Text('\n            '),zD,new GB.Text('\n            '),BE,new GB.Text('\n          ')]);});uD=nD.nodes[5].nodes[3];vD.jB(uD,()=>CC,(vD){vD.add(new GB.Text(' You\'re dead! '));});sD=nD.nodes[5].nodes[5];vD.jB(sD,()=>DC,(vD){vD.add(new GB.Text(' You Win! '));});vD.cB();vD.insert();}main(){JC=true;UC();XC();}class TD<KB> extends sC with t implements List<KB>{final  DE;TD([ g]):DE=g!=null?new List<KB>(g):<KB>[] ;factory TD.hD( g)=>new TD<KB>()..addAll(g); get length{if(o)u(this,k.m,'length');return DE.length;}set length( h){var i=DE.length;if(i==h)return;if(EB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){l(this,k.MB,g,DE[g],null);}l(this,k.m,'length',i,h);}else{l(this,k.m,'length',i,h);for(int g=i;g<h;g++ ){l(this,k.LB,g,null,null);}}}DE.length=h;} operator[]( g){if(o)u(this,k.DB,g);return DE[g];}operator[]=( g, h){var i=DE[g];if(EB(this)){l(this,k.DB,g,i,h);}DE[g]=h;} add( h){var g=DE.length;if(EB(this)){l(this,k.m,'length',g,g+1);l(this,k.LB,g,null,h);}DE.add(h);} toString(){if(o){for(int g=0;g<length;g++ ){u(this,k.DB,g);}}return DE.toString();}}typedef  VB<s,q>();class QB<s,q> extends t implements Map<s,q>{final  EE;var FE;var GE;QB({ createMap}):EE=createMap!=null?createMap():new Map<s,q>(){FE=new YC<s,q>(this);GE=new ZC<s,q>(this);}factory QB.iD( i,{ createMap}){var g=new QB<s,q>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>FE; get values=>GE; get length{if(o)u(this,k.m,'length');return EE.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; HE( g)=>u(this,k.DB,g); IE(){u(this,k.m,'length');EE.keys.forEach(HE);} containsKey( g){if(o)HE(g);return EE.containsKey(g);} operator[]( g){if(o)HE(g);return EE[g];} operator[]=( h, g){var j=EE.length;var i=EE[h];EE[h]=g;if(EB(this)){if(j!=EE.length){l(this,k.m,'length',j,EE.length);l(this,k.LB,h,i,g);}else if(i!=g){l(this,k.DB,h,i,g);}}} putIfAbsent( g, j()){if(o)HE(g);var h=EE.length;var i=EE.putIfAbsent(g,j);if(EB(this)&&h!=EE.length){l(this,k.m,'length',h,EE.length);l(this,k.LB,g,null,i);}return i;} remove( g){if(o)HE(g);var h=EE.length;var i=EE.remove(g);if(EB(this)&&h!=EE.length){l(this,k.MB,g,i,null);l(this,k.m,'length',h,EE.length);}return i;} addAll( h)=>h.forEach((g,i){this[g]=i;}); clear(){var g=EE.length;if(EB(this)&&g>0){EE.forEach((i,h){l(this,k.MB,i,h,null);});l(this,k.m,'length',g,0);}EE.clear();} forEach( g( key, value)){if(o)IE();EE.forEach(g);} toString()=>lB.Maps.mapToString(this);}class YC<s,q> extends lB.IterableBase<s>{final  EE;YC(this.EE); get iterator=>new UD<s,q>(EE);}class UD<s,q> implements Iterator<s>{final  EE;final  FE;var JE=false;UD( g):EE=g,FE=g.EE.keys.iterator; moveNext(){if(o)u(EE,k.m,'length');return JE=FE.moveNext();} get current{var g=FE.current;if(o&&JE)EE.HE(g);return g;}}class ZC<s,q> extends lB.IterableBase<q>{final  EE;ZC(this.EE); get iterator=>new VD<s,q>(EE);}class VD<s,q> implements Iterator<q>{final  EE;final  FE;final  GE;var JE;VD( g):EE=g,FE=g.EE.keys.iterator,GE=g.EE.values.iterator; moveNext(){if(o)u(EE,k.m,'length');var h=FE.moveNext();var g=GE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return JE=g;} get current{if(o&&JE)EE.HE(FE.current);return GE.current;}}typedef  IB( e);typedef  aC( changes);typedef  JB();typedef  bC();class fB{final oldValue;final newValue;final  changes;fB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is fB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>oC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const m=1;static const DB=2;static const LB=DB|4;static const MB=DB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>pC(type,key,oldValue,newValue); toString(){var g;switch (type){case m:g='field';break;case DB:g='index';break;case LB:g='insert';break;case MB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} cC(g, i,[ n]){if(g is t){var h=g;return rB(h,(AB){i(new fB(h,h,AB));});}var j=new gB(g,i,n);if(!j.KE()){return eC;}return j.LE;} rB( g, i){if(g.TB==null)g.TB=new sB();var h=g.TB.add(i);return h.remove;}EC(g){if(g is Map){var h=null;if(g is lB.SplayTreeMap){h=()=>new lB.SplayTreeMap();}else if(g is lB.LinkedHashMap){h=()=>new lB.LinkedHashMap();}return new QB.iD(g,createMap:h);}if(g is Set)return new GC.jD(g);if(g is Iterable)return new TD.hD(g);return g;}class t{var TB;var SB;final  hashCode= ++t.dC;static var dC=0;} EB( g)=>g.TB!=null&&g.TB.head!=null; get o=>RB!=null; u( g, h,i)=>RB.ME(g,h,i); l( g, j,n, h, i){if((j&(k.LB|k.MB))==0){if(h==i)return;}if(NB==null){NB=[] ;qC(fC);}if(g.SB==null){g.SB=[] ;NB.add(g);}g.SB.add(new k(j,n,h,i));} eC(){}var RB;var FC=100;var NB;var OB; fC(){var AB=0;while (NB!=null||OB!=null){var j=NB;NB=null;var i=OB;OB=null;if(AB++ ==FC){gC(j,i);return;}if(j!=null){for(var h in j){var dB=h.SB;h.SB=null;for(var g=h.TB.head;g!=null;g=g.next){var n=g.value;try {n(dB);}catch (AC,PB){WB(AC,PB,n,'from ${h}');}}}}if(i!=null){i.forEach((fD,zB){zB.NE();});}}} gC( n, j){var g=[] ;if(n!=null){for(var i in n){var dB=i.SB;g.add('${i} ${dB}');}}if(j!=null){for(var AB in j.values){var h=AB.NE();if(h!=null)g.add('${AB} ${h}');}}NB=null;OB=null;var PB='exceeded notifiction limit of ${FC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';jC(PB);}class gB{static var hC=0;final  OE= ++gB.hC;final  PE;final  QE;final  RE;final  SE=new Map();final  TE=[] ;var UE=false;var VE;gB(this.PE,this.QE,this.RE); toString()=>RE!=null?'<observer ${OE}: ${RE}>':'<observer ${OE}>'; KE(){var h=RB;RB=this;try {VE=PE();if(VE is Iterable&&VE is !List&&VE is !t){VE=(VE as Iterable).toList();}}catch (g,i){WB(g,i,PE,'from ${this}');VE=null;}SE.forEach(WE);SE.clear();assert(RB==this);RB=h;XE();return TE.length>0;} YE( i){try {QE(i);}catch (g,h){WB(g,h,QE,'from ${this}');}} XE(){var g=VE;if(g is !t)return;TE.add(rB(g,(h){YE(new fB(g,g,h));}));} ME( AB, PB,g){var i=SE.putIfAbsent(AB,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|PB;}catch (j,n){WB(j,n,g,'hashCode or operator == from ${this}');}} WE( i, j){TE.add(rB(i,(n){if(UE)return;for(var g in n){var h=j[g.key];if(h!=null&&(h&g.type)!=0){UE=true;if(OB==null){OB=new lB.SplayTreeMap();}OB[OE]=this;return;}}}));} LE(){for(var g in TE){g();}UE=false;} NE(){if(!UE)return null;var g=VE;LE();KE();try {if(g==VE)return null;}catch (i,j){WB(i,j,g,'operator == from ${this}');return null;}var h=new fB(g,VE);YE(h);return h;}}typedef  iC( message);var jC=(g)=>print(g);typedef  kC(error,stackTrace,obj, message);var WB=lC; lC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class GC<FB> extends rC with t implements Set<FB>{final  ZE;final  aE;GC({ createMap}):ZE=createMap!=null?createMap():new Map<FB,Object>(),aE=createMap;factory GC.jD( g,{ createMap}){return new GC<FB>(createMap:createMap)..addAll(g);} contains( g){if(o)u(this,k.DB,g);return ZE.containsKey(g);} add( g){var h=ZE.length;ZE[g]=const Object();if(h!=ZE.length){l(this,k.m,'length',h,ZE.length);l(this,k.LB,g,null,g);}} remove( g){if(o)u(this,k.DB,g);var h=ZE.length;ZE.remove(g);if(h!=ZE.length){if(EB(this)){l(this,k.MB,g,g,null);l(this,k.m,'length',h,ZE.length);}return true;}return false;} clear(){if(EB(this)){for(var g in ZE.keys){l(this,k.MB,g,g,null);}l(this,k.m,'length',ZE.length,0);}ZE.clear();} get length{if(o)u(this,k.m,'length');return ZE.length;} get isEmpty=>length==0; get iterator=>new WD<FB>(this); addAll( g)=>g.forEach(add); toString(){if(o){for(FB g in ZE.keys){u(this,k.DB,g);}}return ZE.keys.toSet().toString();}}class WD<FB> implements Iterator<FB>{final  bE;final  cE;var dE=false;WD( g):bE=g,cE=g.ZE.keys.iterator; moveNext(){bE.length;return dE=cE.moveNext();} get current{var g=cE.current;if(o&&dE)u(bE,k.DB,g);return g;}}class mC{}class nC{}class BB<CB>{var eE;var fE;var gE;var hE;BB.kD( g,this.gE):hE=g{if(gE!=null)gE.iE++ ;} get next=>fE; get value=>hE;set value( g)=>hE=g; jE( g, h){fE=h;eE=g;if(g!=null)g.fE=this;if(h!=null)h.eE=this;return this;} append( g)=>new BB<CB>.kD(g,gE).jE(this,fE); remove(){if(gE==null)return;gE.iE-- ;if(eE!=null){eE.fE=fE;}else{gE.kE=fE;}if(fE!=null){fE.eE=eE;}else{gE.lE=eE;}fE=null;eE=null;gE=null;}}class sB<CB> extends lB.IterableBase<CB>{var kE;var lE; get length=>iE;var iE=0;sB(){} get head=>kE; add( h){var g=new BB<CB>.kD(h,this);if(lE==null)return kE=lE=g;return lE=g.jE(lE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new XD<CB>(this);}class XD<CB> implements Iterator<CB>{var mE;var gE;var nE;var oE=-1;XD(this.gE){mE=new List<BB>(gE.length);var h=0;var g=gE.head;while (g!=null){mE[h++ ]=g;g=g.next;}} get current=>nE; moveNext(){do{oE++ ;}while(oE<mE.length&&mE[oE].gE!=gE);if(oE<mE.length){nE=mE[oE].value;return true;}else{nE=null;return false;}}}XB(h,g)=>h.hashCode*31+g.hashCode;oC(h,g,i)=>XB(XB(h,g),i);pC(g,i,h,j)=>XB(XB(g,i),XB(h,j)); qC( h()){var g=new gD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class rC extends lB.IterableBase<dynamic>{}abstract class sC extends lB.ListMixin<dynamic>{} tC(i, g,[ h]){var j=i is mC;if(h==null){h=i.toString();}if(!j&&g is GB.Text){g.text=h;}else{var n=g;g=j?new GB.Element.html(h):new GB.Text(h);n.replaceWith(g);}return g;} uC(g){if(g is nC)return g.toString();g=g.toString();return wC(g)?g:'#';}const vC=const["http","https","ftp","mailto"]; wC( h){var g=Uri.parse(h).scheme;if(g=='')return true;return vC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class YB{ cB(){} insert(); remove();}class YD extends YB{final  PC;var pE;final  listener;YD(this.PC,this.listener); insert(){pE=PC.listen(listener);} remove(){pE.cancel();pE=null;}}class ZD extends YB{final exp;final  action;final  isFinal;var v;ZD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new fB(null,exp()));}else if(v!=null){throw new StateError('binding already attached');}else{v=hB(exp,action,'generic-binding');}} remove(){if(!isFinal){v();v=null;}}}class aD extends YB{final  SC;final  xB;final  QC;final  isFinal;var v;aD(this.xB,this.SC,this.QC,this.isFinal); qE(g){SC(QC?uC(g):g);} insert(){if(isFinal){qE(xB());}else if(v!=null){throw new StateError('data binding already attached.');}else{v=hB(xB,(g)=>qE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){v();v=null;}}}class HC extends YB{final  yB;final  children=[] ;final  nodes=[] ;HC(this.yB); listen( i, h){children.add(new YD(i,(g){h(g);CD();}));} OC( h,i){var g=new GB.Text('');children.add(new ZD(()=>'${h()}',(j){g=tC(h(),g,j.newValue);},i));return g;} JD(g,j,h,[i=false]){children.add(new aD(g,j,i,h));} jB( h,g,i){children.add(new yC(h,g,i));} loop( h,g,i){children.add(new bD(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); cB(){for(var g=0,h=children.length;g<h;g++ ){children[g].cB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class IC extends HC{final exp;var v;IC( g,this.exp):super(g); cB(){} insert(){super.cB();if(nodes.length>0){var i=yB.parentNode;var j=yB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  xC( template);class yC extends IC{var kB=false;final  NC;yC( h,g,this.NC):super(h,g); insert(){v=hB(exp,(g){if(!kB&&g.newValue){NC(this);super.insert();kB=true;}else if(kB&&!g.newValue){super.remove();kB=false;}},'conditional-binding');} remove(){super.remove();v();v=null;}}typedef  zC( list, index, template);class bD extends IC{final  RC;bD( h,g,this.RC):super(h,g); insert(){v=hB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){RC(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();v();v=null;}}var JC=false; AD(g, AB,[ n]){if(JC)return cC(g,AB);if(AB==null)return (){};if(ZB==null)ZB=new sB<aB>();var i;var h=w.GD;if(g is MC){i=(g as MC).rE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=w.bB;}else if(j is Iterable){h=w.bB;i=()=>g().toList();}else if((j is lB.LinkedHashMap)||(j is lB.SplayTreeMap)){h=w.vB;}else if(j is Map){h=w.uB;}}catch (dB,zB){print('error: evaluating ${n!=null?n:"<unnamed>"} ' 'watcher threw error (${dB}, ${zB})');}}else if(g is List){i=()=>g;h=w.bB;}else if(g is Iterable){i=()=>g.toList();h=w.bB;}else if((g is lB.LinkedHashMap)||(g is lB.SplayTreeMap)){i=()=>g;h=w.vB;}else if(g is Map){i=()=>g;h=w.uB;}var PB=BD(h,i,AB,n);var AC=ZB.add(PB);return AC.remove;} BD( j, g, i, h){switch (j){case w.bB:return new cD(g,i,h);case w.vB:return new eD(g,i,h);case w.uB:return new dD(g,i,h);default:return new aB(g,i,h);}} hB(h,i,[j]){var n=AD(h,i,j);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new fB(null,g));return n;}var ZB;class aB{final  wB;final  rE;final  sE;var tE;aB(this.rE,this.sE,this.wB){tE=rE();} toString()=>wB==null?'<unnamed>':wB; ID(){var g=uE();if(vE(g)){var h=tE;wE(g);sE(new fB(h,g));return true;}return false;} vE(g)=>tE!=g; wE(g){tE=g;}uE(){try {return rE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return tE;}}final  KC=10; CD(){if(ZB==null)return;var g;var h=0;do{g=false;for(var i in ZB){if(i.ID()){g=true;}}}while(g&& ++h<KC);if(h==KC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  LC<DD>();typedef  ED<DD>( value);class MC<DD>{}class cD<DD> extends aB{cD(g, i, h):super(g,i,h){wE(uE());} vE( g){return tB(tE,g);} wE(g){tE=new List<DD>.from(g);}}class dD<iB,FD> extends aB{dD(g, i, h):super(g,i,h){wE(uE());} vE( g){var i=tE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(tE[h]!=g[h])return true;}return false;} wE(g){tE=new Map<iB,FD>.from(g);}}class eD<iB,FD> extends aB{eD(g, i, h):super(g,i,h){wE(uE());} vE( g){return tB(g.keys,tE.keys)||tB(g.values,tE.values);} wE(g){tE=new lB.LinkedHashMap.from(g);}} tB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class w{final xE;const w.lD(this.xE);toString()=>'Enum.${xE}';static const bB=const w.lD('LIST');static const uB=const w.lD('HASH_MAP');static const vB=const w.lD('ORDERED_MAP');static const GD=const w.lD('OTHER');}//@ sourceMappingURL=simplehangman.html_bootstrap.dart.map
